format_dir_list <- function(x) {
z <- NA
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(z)
}
format_dir_list(x)
format_dir_list <- function(x) {
z <- NA
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(z)
}
length(x)
length(x[1])
length(x[[1]])
x <- folder_output[["2010"]][[1]]
x <- folder_output[["2010"]][[1]]
x
format_dir_list <- function(x) {
z <- NA
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(z)
}
format_dir_list(x)
c('a', 'b', x)
paste(x)
paste0(x)
x
str(x)
cat(x)
cat(format_dir_list(x))
x <- folder_output[["2010"]][[1]]
x
format_dir_list <- function(x) {
z <- NA
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
length(folder_output)
formatted_directory_list <- NA
for (i in folder_output) {
formatted_directory_list[i] <- format_dir_list(i[[1]])
}
folder_output
folder_output[1]
folder_output[1][[1]]
format_dir_list(folder_output[1][[1]])
for (i in folder_output) {
print i
#  formatted_directory_list[i] <- format_dir_list(i[[1]])
}
for (i in folder_output) {
print(i)
#  formatted_directory_list[i] <- format_dir_list(i[[1]])
}
for (i in folder_output) {
str(i)
#  formatted_directory_list[i] <- format_dir_list(i[[1]])
}
str(folder_output[1])
str(folder_output[3])
for (i in 1:length(folder_output)) {
formatted_directory_list[i] <- format_dir_list(i[[1]])
}
for (i in 1:length(folder_output)) {
formatted_directory_list[i] <- format_dir_list(folder_output[i][[1]])
}
formatted_directory_list <- NA
for (i in 1:length(folder_output)) {
formatted_directory_list[i] <- format_dir_list(folder_output[i][[1]])
}
format_dir_list(folder_output[1][[1]]
)
lapply(folder_output, format_dir_list)
x <- folder_output[["2010"]]
x
format_dir_list <- function(x) {
z <- NA
x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
length(folder_output)
lapply(folder_output, format_dir_list)
sapply(folder_output, format_dir_list)
lapply(folder_output, format_dir_list)
mapply(folder_output, format_dir_list)
folder_output[1]
folder_output[2]
x
cat(x)
cat(c(x))
x <- folder_output[1]
x
x <- folder_output[["2010"]]
x
x <- folder_output[3]
x
x <- folder_output[["2003"]]
x <- folder_output[3]
x <- folder_output[["2003"]]
x
x <- folder_output[3]
x
format_dir_list <- function(x) {
z <- NA
x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
x <- folder_output[["2003"]]
format_dir_list <- function(x) {
z <- NA
x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
str(x)
format_dir_list <- function(x) {
z <- NA
x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
paste(format_dir_list(x))
sapply(format_dir_list(x), paste)
lapply(format_dir_list(x), paste)
format_dir_list(x)
x <- folder_output[["2003"]]
format_dir_list <- function(x) {
z <- NA
x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
format_dir_list <- function(x) {
z <- NA
#  x <- x[1]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
x[1]
x
x[1] == x
x[[1]] == x
x[[1]]
format_dir_list <- function(x) {
z <- NA
x <- x[[1]]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
x <- folder_output[3]
format_dir_list <- function(x) {
z <- NA
x <- x[[1]]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
x <- folder_output[[3]]
format_dir_list <- function(x) {
z <- NA
x <- x[[1]]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
lapply(folder_output, format_dir_list)
format_dir_list <- function(x) {
z <- NA
x <- x[[1]]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
lapply(folder_output, format_dir_list)
sapply(folder_output, format_dir_list)
for(i in sort(unique(folder_years$year))) {
x <- folder_years %>% filter(year == i)
#  folder_output[as.character(i)][[1]] <- x[,1]
folder_output[as.character(i)][1] <- x[,1]
}
folder_output
folder_output[["2010"]]
lapply(folder_output, format_dir_list)
x <- folder_output[["2003"]]
x
str(x)
paste(x)
paste(x, "hi")
lapply(x, paste)
sapply(x, paste)
str(sapply(x, paste))
formatted_directory_list <- NA
lapply(folder_output, format_dir_list)
sapply(folder_output, format_dir_list)
x <- folder_output[[3]]
x
format_dir_list <- function(x) {
z <- NA
#  x <- x[[1]]
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
sapply(folder_output, format_dir_list)
lapply(folder_output, format_dir_list)
format_dir_list <- function(x) {
z <- NA
for (i in 1:length(x)) {
z[i] <- paste0("\'", x[i], "\'")
}
return(cat(z))
}
format_dir_list(x)
format_dir_list(folder_output[1])
format_dir_list(folder_output[2])
format_dir_list(folder_output[[2]])
for (i in 1:16) {
format_dir_list(folder_output[[i]])
}
dims(folder_output)
dim(folder_output)
dim_name(folder_output)
dimnames(x)
dimnames(folder_output)
names(folder_output)
for (i in 1:16) {
print(names(folder_output)[i])
format_dir_list(folder_output[[i]])
}
for (i in 1:16) {
print("--------------------------")
print(names(folder_output)[i])
cat("\n")
format_dir_list(folder_output[[i]])
}
for (i in 1:16) {
cat("\n")
print("--------------------------")
print(names(folder_output)[i])
cat("\n")
format_dir_list(folder_output[[i]])
}
for (i in 1:16) {
print("--------------------------")
cat("\n")
print(names(folder_output)[i])
cat("\n")
format_dir_list(folder_output[[i]])
}
for (i in 1:16) {
cat("\n")
print(names(folder_output)[i])
cat("\n")
format_dir_list(folder_output[[i]])
}
for (i in 1:16) {
cat("\n")
print(names(folder_output)[i])
cat("\n")
format_dir_list(folder_output[[i]])
cat("\n")
}
# Chunk 1
library(dplyr)
library(stringr)
library(tidyr)
photos <- read.csv(file = "~/Dropbox/Mike/photo_analysis/all_photo_dates.csv")
photos <- tbl_df(photos)
# Chunk 2
photos
# Chunk 3
photos <- photos %>% separate(SourceFile, c("dot", "dname", "fname"), sep = "/", remove = TRUE)
photos <- photos[,2:4] # drop the first column of dots
photos
# Chunk 4
photos$DateTimeOriginal <- as.POSIXct(strptime(photos$DateTimeOriginal, format = "%Y:%m:%d %H:%M:%S"))
photos
# Chunk 1
library(dplyr)
library(stringr)
library(tidyr)
photos <- read.csv(file = "~/Dropbox/Mike/photo_analysis/all_photo_dates.csv")
photos <- tbl_df(photos)
# Chunk 2
photos
# Chunk 3
photos <- photos %>% separate(SourceFile, c("dot", "dname", "fname"), sep = "/", remove = TRUE)
photos <- photos[,2:4] # drop the first column of dots
photos
# Chunk 4
photos$DateTimeOriginal <- as.POSIXct(strptime(photos$DateTimeOriginal, format = "%Y:%m:%d %H:%M:%S"))
# Chunk 5
photos <- photos %>% mutate(year = as.POSIXlt(DateTimeOriginal)$year + 1900)
photos
# Chunk 6
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
folder_years <- photos %>% group_by(dname) %>% summarize(year = Mode(year))
folder_years
# Chunk 7
folder_output <- list()
for(i in sort(unique(folder_years$year))) {
x <- folder_years %>% filter(year == i)
folder_output[as.character(i)][1] <- x[,1]
}
```
library(epi.R)
library(epiR)
dat <- table(c(18, 154, 68, 129))
dat
dat <- table(c(18, 154, 68, 129), 2)
dat <- matrix(c(18, 154, 68, 129), 2)
dat
fileURL <- "https://www.dropbox.com/s/6cm3u4dfo3a0yh2/parking_data.csv"
download.file(fileURL, destfile = "parking_data.csv", method = "curl")
dat <- read.csv("parking_data.csv")
dat
rm(dat)
fileURL <- "https://www.dropbox.com/s/6cm3u4dfo3a0yh2/parking_data.csv?dl=0"
download.file(fileURL, destfile = "parking_data.csv", method = "curl")
dat <- read.csv("parking_data.csv")
fileURL <- "https://mching.github.io/datasets/parking_data.csv"
download.file(fileURL, destfile = "parking_data.csv", method = "curl")
dat <- read.csv("parking_data.csv")
dat
library(dplyr)
dat <- table.df(dat)
dat <- tbl.df(dat)
dat <- tbl_df(dat)
source('~/.active-rstudio-document', echo=TRUE)
dat %>% summarize(State, Reverse = sum(Reverse_in), Forward = sum(Forward_in))
dat %>% summarize(State, Reverse = sum(Reverse_in))
dat %>% group_by(State) %>% summarize(Reverse = sum(Reverse_in))
dat %>% group_by(State) %>%
summarize(Reverse = sum(Reverse_in), Forward = sum(Forward_in))
summarize(Reverse_in = sum(Reverse_in), Forward_in = sum(Forward_in))
table1 <- dat %>% group_by(State) %>%
summarize(Reverse_in = sum(Reverse_in), Forward_in = sum(Forward_in))
table1
epi.2by2(table1)
as.table(table1)
dat
table1
table1 %>% gather(Reverse_in, Forward_in)
library(tidyr)
table1 %>% gather(Reverse_in, Forward_in)
table1 %>% gather(Reverse_in, Forward_in, a:b)
table1
table1 %>% gather(Direction, n, Reverse_in:Forward_in)
table(table1)
ungroup(table1)
table2 <- table1 %>% gather(Direction, n, Reverse_in:Forward_in)
ungroup(table2)
table1 %>% gather(Direction, n, Reverse_in:Forward_in)
table2 <- table1 %>% gather(Direction, n, Reverse_in:Forward_in)
new <- as.data.frame(lapply(data, function(x,p) rep(x,p), table2[["n"]]))
help("rep")
table2[["n"]]
new <- as.data.frame(lapply(table2, function(x,p) rep(x,p), table2[["n"]]))
new
new <- as.data.frame(lapply(table2, function(x,p) rep(x,p)))
new <- as.data.frame(lapply(table2, function(x,p) rep(x,p))
)
new <- as.data.frame(lapply(table2, function(x,p) rep(x,p), 1))
new
table2
new <- as.data.frame(lapply(table2, function(x,p) rep(x,p), table2[["n"]]))
new
table(new)
table(new[,c(1,2)])
table(new[,c(2,1)])
table(new[,c(1,2)])
table2[rep(1:nrow(table2), table2$n), 1:2]
table2
table2
table2[rep(1:nrow(table2), table2$n), 1:2]
dat
dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat[rep(1:nrow(dat), dat$n), 1:2]
tidy_dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat[rep(1:nrow(dat), dat$n), 1:2]
dat <- tbl_df(dat)
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat[rep(1:nrow(dat), dat$n), 1:3]
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat[rep(1:nrow(dat), dat$n), 1:3]
dat %>% group_by(State)
dat
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
dat
dat %>% group_by(State) %>% group_by(Direction)
dat %>% group_by(State) %>% group_by(Direction) %>% summarize(RI = length(Reverse_in))
dat %>% group_by(State) %>% group_by(Direction) %>% count(Direction)
dat %>% group_by(State) %>% count(Direction)
dat
dat %>% group_by(State) %>% count(Direction)
dat
dat
with(dat, table(State, Direction))
with(dat, table(State, Direction))
table(dat$State, dat$Direction)
str(dat)
dat$Direction <- factor(dat$Direction)
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
table(dat$State, dat$Direction)
str(dat)
levels(dat$Direction) <- levels(dat$Direction)[2:1]
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
table(dat$State, dat$Direction)
dat <- read.csv("parking_data.csv")
dat$Direction <- factor(dat$Direction)
levels(dat$Direction) <- levels(dat$Direction)[2:1]
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
table(dat$State, dat$Direction)
dat <- read.csv("parking_data.csv")
dat$Direction <- factor(dat$Direction)
dat <- read.csv("parking_data.csv")
dat$Direction <- factor(dat$Direction)
dat <- read.csv("parking_data.csv")
dat <- read.csv("parking_data.csv")
str(dat)
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
str(dat)
dat$Direction <- factor(dat$Direction)
table(dat$State, dat$Direction)
levels(dat$Direction) <- levels(dat$Direction)[2:1]
table(dat$State, dat$Direction)
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
dat$Direction <- factor(dat$Direction)
labels(dat$Direction) <- labels(dat$Direction)[2:1]
table(dat$State, dat$Direction)
dat <- read.csv("parking_data.csv")
dat <- tbl_df(dat)
dat <- dat %>% gather(Direction, n, Reverse_in:Forward_in)
dat <- dat[rep(1:nrow(dat), dat$n), 1:3]
dat$Direction <- factor(dat$Direction, levels = c("Reverse_in", "Forward_in"))
table(dat$State, dat$Direction)
epi.2by2(table(dat$State, dat$Direction), method = "Cross")
epi.2by2(table(dat$State, dat$Direction), method = "cross")
epi.2by2(table(dat$State, dat$Direction))
epi.2by2(table(dat$State, dat$Direction), method = "cross.sectional")
table1 <- table(dat$State, dat$Direction)
epi.2by2(table1, method = "cross.sectional")
table1
dat$State <- factor(dat$State, levels = c("Hawaii", "California"))
table1 <- table(dat$State, dat$Direction)
epi.2by2(table1, method = "cross.sectional")
knit_with_parameters('~/Documents/mching.github.io/Rmd_files/2016-07-14-Reverse_in_parking_in_Hawaii_and_California.Rmd')
